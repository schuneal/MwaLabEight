show dbs
use Restaurant
1.	Write a mongoDb query to display all the documents in restaurants collection.
=>  db.restaurants.find()

2.	Write a mongoDb query to display all the fields
    restaurant_id,name,district and cuisine for the documents
    in collection restaurants.
=>  db.restaurants.find({}, {_id:0, restaurant_id:1, name:1, district:1, cuisine:1}).pretty()

3.	Write a mongoDb query to display all the fields 
    restaurant_id,name,district and cuisine,but exclude _id 
    for the documents in collection restaurants.
=>  db.restaurants.find({}, {_id:0,restaurant_id:1, name:1, district:1, cuisine:1}).pretty()

4.	Write a mongoDb query to display all the fields
    restaurant_id,name,district and zipcode,but exclude _id 
    for the documents in collection restaurants.
=>  db.restaurants.find({}, {_id:0, restaurant_id:1, name:1, district:1, "address.zipcode":1}).pretty()

5.	Write a mongoDb query to display all the restaurants in district Bronx.
=>  db.restaurants.find({district:"Bronx"}).pretty()

6.	Write a mongo query to display first five restaurants which are in district bronx.
=>  db.restaurants.find({district:"Bronx"}).limit(5).pretty()

7.	write a mongo query to skip first five resturants 
    and then display next five resturants in district Bronx.
=>  db.restaurants.find({district:"Bronx"}).skip(5).limit(5).pretty()

8.	Write a mongodb query to find the restaurants which locates in lattitude less than -95.754168.
=>  db.restaurants.find({"address.coord.0":{$lt: -95.754168}}).pretty()

9.	Write a mongodb query to find the restaurants 
    that doesnot prepare any cuisine of "American"
    and their grade score more than 70 and lattitude less than -65.754168.
=>  db.restaurants.find({$and: [{cuisine:{$ne : "American "}},{"grades.score":{$gt: 70}},{"address.coord.0":{$lt: -65.754168}}]}).pretty()

10.	Write a mongoDb query to display all the fields 
    restaurant_id,name,district and cuisine for those restaurants 
    which contains "Wil" as the first three letters of its name.
=>  db.restaurants.find({name : {$regex : /^Wil/}}, {_id:0, restaurant_id:1, name:1, district:1, cuisine:1}).pretty()

11.	Write a mongoDb query to display all the fields restaurant_id,
    name,district and cuisine for those restaurants which contains "ces" as the last three 
    letters of its name.
=>  db.restaurants.find({name : {$regex : /ces$/}}, {_id:0, restaurant_id : 1, name : 1, district : 1, cuisine : 1}).pretty()

12.	Write a mongoDb query to display all the fields restaurant_id,
    name,district and cuisine for those restaurants which contains "Reg" as the last three 
    letters somewhere in its name.
=>  db.restaurants.find({name : {$regex : "Reg", $options : "i"}}, {_id:0, restaurant_id : 1, name : 1, district : 1, cuisine :1}).pretty()

13.	Write a mongodb query to find the 
    restaurants which belongs to the district Bronx and
    prepare either American or Chinese dish.
=>  db.restaurants.find({$and : [{district : "Bronx"}, {$or : [{cuisine : "American "}, {cuisine : "Chinese"}]}]}).pretty() 

14.	Write a mongoDb query to display all 
    the fields restaurant_id,name,district 
    and cuisine for those restaurants which belongs to the district 
    Staten Island or Queens or Bronx or Brooklyn.
=>  db.restaurants.find({$or : [{district : "Staten Island"},{district : "Queens"},{district : "Bronx"},{district : "Brooklyn"}]},{restaurant_id : 1, name : 1, district : 1, cuisine : 1}).pretty() 


15.	Write a mongoDb query to display all the fields restaurant_id,
    name,district and cuisine for those restaurants which belongs to the district Staten 
    Island or Queens or Bronx or Brooklyn.
=>  db.restaurants.find({district : {$nin : ["Staten Island","Queens","Bronx","Brooklyn"]}}, {restaurand_id : 1,name : 1,district : 1,cuisine :1}).pretty()


16.	Write a mongoDb query to display all the fields restaurant_id,
    name,district and cuisine for those restaurants which achieved a score not more than 10.
=>  db.restaurants.find({"grades.score" : {$not : {$gt : 10}}}, {_id:0, restaurant_id : 1, name : 1, district : 1, cuisine : 1}).pretty()	

17.	Write a mongoDb query to display all the fields restaurant_id,
    name,address and geographic location for those location where 2nd element of coordinate
    array contains a value which is more than 42 and upto 52.
=>  db.restaurants.find({"address.coord.1" : {$gt : 42, $lte : 52}}, {_id:0, restaurant_id : 1, name : 1, district : 1, "address.coord" : 1 }).pretty()

18.	Write a mongodb query to arrange the name of restaurants in ascending order along 
    all the columns.
=>  db.restaurants.find().sort({name:1}).pretty()

19.	Write a mongodb query to arrange the name of restaurants in descending order along 
    all the columns.
=>  db.restaurants.find().sort({name:-1}).pretty()

20.	Write a mongodb query to arrange the name of restaurants in ascending order and
    the district name in descending order.  
=>  db.restaurants.find().sort({cuisine : 1, district : -1}).pretty()

21.	Write a mongodb query to know whether all the address contains street or not.
=>  db.restaurants.find({"address.street": {$exists : true}}).pretty()

22.	write a mongodb query which will select all documents in the restaurants collection 
    where teh coord field value is double.
    =>  db.restaurants.find({"address.coord": {$type : 1}}).pretty()

23.	Write a mongodb query to find the name,district,lattitude,longitute,cuisine for those 
    resturants which contains 'mad' as first 3 letters of its name.
=>  db.restaurants.find({name : {$regex : /^Mad/, $options : "1"}},{_id:0, restaurant_id : 1, name : 1, district : 1, "address.coord" : 1, cuisine : 1, }).pretty()